@model WebUI.ViewModels.AlunoViewModel


<div class="row">

    <div class="col-md-6">

        @Html.HiddenFor(model => model.ID)

        <div class="row">

            <div class="form-group col-md-12 @if (!ViewData.ModelState.IsValidField("Nome")) { @Html.Raw("has-error") }">
                <label>*Nome</label>
                @Html.TextBoxFor(model => model.Nome, new { @class = "form-control", @required = true })
                @Html.ValidationMessageFor(model => model.Nome, String.Empty, new { @for = "inputError", @class = "control-label" })
            </div>

        </div>

        <div class="row">

            <div class="form-group col-md-12 @if (!ViewData.ModelState.IsValidField("Nome")) { @Html.Raw("has-error") }">
                <label>*Turma</label>
                @Html.DropDownListFor(c => c.TurmaID, new SelectList(Model.Turmas.OrderBy(x => x.Nome), "ID", "Nome"), "Selecione", new { required = "required" })
            </div>

        </div>

        <div class="row">

            <div class="form-group col-md-12 @if (!ViewData.ModelState.IsValidField("Nome")) { @Html.Raw("has-error") }">
                <label>*Data de Nascimento</label>
                @Html.TextBoxFor(p => p.DataNascimento, "{0:dd/MM/yyyy}", new { @class = "calendario", id = "DataNascimento", @required = true })
                @Html.ValidationMessageFor(x => x.DataNascimento, "", new { @id = "DataNascimento" })
            </div>

        </div>        

    </div>
    <div class="col-md-6">


    </div>

</div>