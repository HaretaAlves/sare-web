@model WebUI.ViewModels.AlunoViewModel


<div class="row align-items-center justify-content-center">

    <div class="col-lg-6 col-md-10">

        @Html.HiddenFor(model => model.ID)

        @if (Model.FotoID != 0)
        {
            <div class="row">
                <div class="form-group col-lg-12">
                    <ul class="list-inline">
                        <li>
                            <i class="fa fa-trash confirmDelete" data-action="/Aluno/ExcluirFoto/@Model.FotoID" style="cursor:pointer;float:right;margin-right:10px;"></i>
                            <br />
                            <a href="/_uploads/@Model.Foto" data-toggle="lightbox" data-gallery="fotos-bolo" data-type="image">
                                <img src="/_uploads/@Model.Foto.FotoUrl.Insert(Model.Foto.FotoUrl.LastIndexOf("."), "_thumb")" class="img-thumbnail" />
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        }

        <div class="row">

            <div class="form-group col-md-12 @if (!ViewData.ModelState.IsValidField("Nome")) { @Html.Raw("has-error") }">
                <label>*Nome</label>
                @Html.TextBoxFor(model => model.Nome, new { @class = "form-control", @required = true })
                @Html.ValidationMessageFor(model => model.Nome, String.Empty, new { @for = "inputError", @class = "control-label" })
            </div>

        </div>

        <div class="row">

            <div class="form-group col-md-12 @if (!ViewData.ModelState.IsValidField("Nome")) { @Html.Raw("has-error") }">
                <label>*Escola</label>
                <div class="selectWrapper">
                    @Html.DropDownListFor(c => c.EscolaID, new SelectList(Model.Escolas.OrderBy(x => x.Nome), "ID", "Nome"), "Selecione", new { @Id = "escolasList", required = "required", @onchange = "ListTurmasByEscolaID()" })
                </div>
            </div>

        </div>

        <div class="row">

            <div class="form-group col-md-12 @if (!ViewData.ModelState.IsValidField("Nome")) { @Html.Raw("has-error") }">
                <label>*Turma</label>
                <div class="selectWrapper">
                    @Html.DropDownListFor(c => c.TurmaID, new SelectList(Model.Turmas.OrderBy(x => x.Nome), "ID", "Nome"), "Selecione", new { @Id = "turmasList", required = "required" })
                </div>
            </div>

        </div>

        <div class="row">

            <div class="form-group col-md-12 @if (!ViewData.ModelState.IsValidField("Nome")) { @Html.Raw("has-error") }">
                <label>*Data de Nascimento</label>
                <div class="form-birthdate">
                    @Html.TextBoxFor(p => p.DataNascimento, "{0:dd/MM/yyyy}", new { @class = "calendario", id = "DataNascimento", @required = true })
                    @Html.ValidationMessageFor(x => x.DataNascimento, "", new { @id = "DataNascimento" })
                </div>
            </div>

        </div>

    @{
        if (Model.ID != 0)
        {
            <div class="row">
                <div class="col-lg-12">
                    <label>Foto do Aluno</label>
                    <div class="form-group d-flex form-aluno-foto--wrapper justify-content-between">
                        <input type="file" class="form-control" name="foto" />
                        <button type="button" onclick="document.forms[0].action='/Alunos/Upload?id=@Model.ID&nome=@Model.Nome';document.forms[0].submit();" class="btn btn-default">Enviar</button>
                    </div>
                </div>
            </div>           

        }

    }

    </div>
</div>


@{
    <script type="text/javascript">

        function SendImage() {
            yourFileObj = $('#imageTest').get(0);
            $.ajax({
                url: '/Alunos/UploadImage/',
                type: "POST",
                data: JSON.stringify({ 'escolaID': selected }),
                dataType: "json",
                traditional: true,
                contentType: "application/json; charset=utf-8",
                async: false,
                success: function (result) {
                    clearCascadeEdit();
                    console.log(result);
                    var options = $("#turmasList");
                    options.append($("<option />").val("").text("Selecione"));
                    $.each(result, function () {
                        options.append($("<option />").val(this.ID).text(this.Nome));
                    });
                },
                error: function (error) {
                    console.log(error.responseText);
                }
            });
        }

        function ListTurmasByEscolaID() {
            var selected = $("#escolasList option:selected").val();
            $.ajax({
                url: '/Alunos/TurmasPorEscola/',
                type: "POST",
                data: JSON.stringify({ 'escolaID': selected }),
                dataType: "json",
                traditional: true,
                contentType: "application/json; charset=utf-8",
                async: false,
                success: function (result) {
                    clearCascadeEdit();
                    console.log(result);
                    var options = $("#turmasList");
                    options.append($("<option />").val("").text("Selecione"));
                    $.each(result, function () {
                        options.append($("<option />").val(this.ID).text(this.Nome));
                    });
                },
                error: function (error) {
                    console.log(error.responseText);
                }
            });
        }

        function clearCascadeEdit() {
            $("#turmasList").empty();
        }

    </script>
}

